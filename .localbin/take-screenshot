#!/usr/bin/env bash
#
# rofi menu to take screenshots with maim
#
# usage: take-screenshot
#
#   $ take-screenshot

# This option will make the script exit when there is an error
set -o errexit
# This option will make the script exit when last command threw an error
set -o pipefail
# This option will make the script exit when it tries to use an unset variable
set -o nounset
# Trace what gets executed
# set -o xtrace

# Set magic variables for current file & dir
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)" # <-- change this as it depends on your app

dir_screenshots="$HOME/Pictures/Screenshots"
file_extension="png"
filename=""
filename_prefix=""
maim_option=""
selection=-1

# create screenshot directory
mkdir -p ${dir_screenshots}

# start
case $(echo "[1] Fullscreen|[2] Selection|[3] Active Window|[4] High Quality|[5] Open screenshots directory" | rofi -sep '|' -auto-select -no-fixed-num-lines -dmenu -p "Take Screenshot" -i) in
    '[1] Fullscreen')
        selection=1
        filename_prefix="default"
        maim_option=""
        dunstify_title_postfix="Fullscreen"
        ;;
    '[2] Selection')
        selection=2
        filename_prefix="selection"
        maim_option="-s"
        dunstify_title_postfix="Selection"
        ;;
    '[3] Active Window')
        selection=3
        filename_prefix="active"
        maim_option="-i $(xdotool getactivewindow)"
        dunstify_title_postfix="Active Window"
        ;;
    '[4] High Quality')
        selection=4
        filename_prefix="hq"
        maim_option="-m 1"
        dunstify_title_postfix="High Quality"
        ;;
    '[5] Open screenshots directory')
        selection=0
        ;;
esac

# put together all the pieces for the filename
filename="${filename_prefix}-$(date -u +"%Y-%m-%d-%T").${file_extension}"

echo ${selection}
# Do nothing by default
if [[ ${selection} -eq 0 ]]; then
    # Open nnn by default
    $TERM -e nnn ${dir_screenshots} &
elif [[ ${selection} -gt 0 ]]; then
    # Take screenshot
    maim -q ${maim_option} ${filename}
    mv ${filename} ${dir_screenshots}
    # Display notification
    dunstify "Screenshot: ${dunstify_title_postfix}" "${filename} saved in ${dir_screenshots} directory"
fi

exit $?
